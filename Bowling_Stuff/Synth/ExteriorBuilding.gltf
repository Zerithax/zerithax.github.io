{
    "accessors": {
        "accessors_accessor_buffer_Cube.009_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.009_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 4,
            "max": [
                25.711835861206055,
                1.140588402748108,
                3.9581209421157837e-07
            ],
            "min": [
                -25.711835861206055,
                -1.1405880451202393,
                3.948807716369629e-07
            ],
            "name": "accessor_buffer_Cube.009_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.009_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.009_0",
            "byteOffset": 48,
            "byteStride": 12,
            "componentType": 5126,
            "count": 4,
            "max": [
                0,
                0,
                1.0
            ],
            "min": [
                0.0,
                -4.0826414471339945e-10,
                1.0
            ],
            "name": "accessor_buffer_Cube.009_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.009_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.009_0",
            "byteOffset": 96,
            "byteStride": 8,
            "componentType": 5126,
            "count": 4,
            "max": [
                14.249999046325684,
                14.25
            ],
            "min": [
                -13.249999046325684,
                -13.25
            ],
            "name": "accessor_buffer_Cube.009_2",
            "type": "VEC2"
        },
        "accessors_accessor_buffer_Cube.009_3": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.009_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 6,
            "max": [
                3
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.009_3",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.010_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.010_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 162,
            "max": [
                25.711835861206055,
                1.660447597503662,
                1.6809741258621216
            ],
            "min": [
                -25.711835861206055,
                -0.6217094659805298,
                0.009337827563285828
            ],
            "name": "accessor_buffer_Cube.010_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.010_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.010_0",
            "byteOffset": 1944,
            "byteStride": 12,
            "componentType": 5126,
            "count": 162,
            "max": [
                1.0,
                1.0,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -0.9936637878417969
            ],
            "name": "accessor_buffer_Cube.010_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.010_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.010_0",
            "byteOffset": 3888,
            "byteStride": 8,
            "componentType": 5126,
            "count": 162,
            "max": [
                0.991729736328125,
                0.9988359386334196
            ],
            "min": [
                0.003956570290029049,
                0.0011640191078186035
            ],
            "name": "accessor_buffer_Cube.010_2",
            "type": "VEC2"
        },
        "accessors_accessor_buffer_Cube.010_3": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.010_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 252,
            "max": [
                161
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.010_3",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.013_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.013_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 584,
            "max": [
                142.0005340576172,
                2.4795355796813965,
                285.3477783203125
            ],
            "min": [
                -142.0005340576172,
                -2.432851791381836,
                2.0
            ],
            "name": "accessor_buffer_Cube.013_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.013_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.013_0",
            "byteOffset": 7008,
            "byteStride": 12,
            "componentType": 5126,
            "count": 584,
            "max": [
                1.0,
                1.0,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -1.0
            ],
            "name": "accessor_buffer_Cube.013_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.013_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.013_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 912,
            "max": [
                583
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.013_2",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.020_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.020_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                0.049999285489320755,
                0.5249795317649841,
                0.5249814391136169
            ],
            "min": [
                -0.050000716000795364,
                -0.32502061128616333,
                -0.3250187039375305
            ],
            "name": "accessor_buffer_Cube.020_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.020_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.020_0",
            "byteOffset": 1992,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                1.0,
                0.9999999403953552,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -1.0
            ],
            "name": "accessor_buffer_Cube.020_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.020_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.020_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 324,
            "max": [
                165
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.020_2",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.021_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.021_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                0.049999285489320755,
                0.5249795317649841,
                0.5249814391136169
            ],
            "min": [
                -0.050000716000795364,
                -0.32502061128616333,
                -0.3250187039375305
            ],
            "name": "accessor_buffer_Cube.021_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.021_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.021_0",
            "byteOffset": 1992,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                1.0,
                0.9999999403953552,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -1.0
            ],
            "name": "accessor_buffer_Cube.021_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.021_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.021_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 324,
            "max": [
                165
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.021_2",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.022_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.022_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                0.049999285489320755,
                0.5249795317649841,
                0.5249814391136169
            ],
            "min": [
                -0.050000716000795364,
                -0.32502061128616333,
                -0.3250187039375305
            ],
            "name": "accessor_buffer_Cube.022_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.022_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.022_0",
            "byteOffset": 1992,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                1.0,
                0.9999999403953552,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -1.0
            ],
            "name": "accessor_buffer_Cube.022_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.022_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.022_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 324,
            "max": [
                165
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.022_2",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.023_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.023_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                0.049999285489320755,
                0.5249795317649841,
                0.5249814391136169
            ],
            "min": [
                -0.050000716000795364,
                -0.32502061128616333,
                -0.3250187039375305
            ],
            "name": "accessor_buffer_Cube.023_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.023_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.023_0",
            "byteOffset": 1992,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                1.0,
                0.9999999403953552,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -1.0
            ],
            "name": "accessor_buffer_Cube.023_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.023_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.023_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 324,
            "max": [
                165
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.023_2",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.024_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.024_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                0.049999285489320755,
                0.5249795317649841,
                0.5249814391136169
            ],
            "min": [
                -0.050000716000795364,
                -0.32502061128616333,
                -0.3250187039375305
            ],
            "name": "accessor_buffer_Cube.024_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.024_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.024_0",
            "byteOffset": 1992,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                1.0,
                0.9999999403953552,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -1.0
            ],
            "name": "accessor_buffer_Cube.024_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.024_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.024_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 324,
            "max": [
                165
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.024_2",
            "type": "SCALAR"
        },
        "accessors_accessor_buffer_Cube.025_0": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.025_0",
            "byteOffset": 0,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                0.049999285489320755,
                0.5249795317649841,
                0.5249814391136169
            ],
            "min": [
                -0.050000716000795364,
                -0.32502061128616333,
                -0.3250187039375305
            ],
            "name": "accessor_buffer_Cube.025_0",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.025_1": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.025_0",
            "byteOffset": 1992,
            "byteStride": 12,
            "componentType": 5126,
            "count": 166,
            "max": [
                1.0,
                0.9999999403953552,
                1.0
            ],
            "min": [
                -1.0,
                -1.0,
                -1.0
            ],
            "name": "accessor_buffer_Cube.025_1",
            "type": "VEC3"
        },
        "accessors_accessor_buffer_Cube.025_2": {
            "bufferView": "bufferViews_bufferView_buffer_Cube.025_1",
            "byteOffset": 0,
            "byteStride": 2,
            "componentType": 5123,
            "count": 324,
            "max": [
                165
            ],
            "min": [
                0
            ],
            "name": "accessor_buffer_Cube.025_2",
            "type": "SCALAR"
        }
    },
    "asset": {
        "profile": {
            "api": "WebGL",
            "version": "1.0"
        },
        "version": "1.0"
    },
    "bufferViews": {
        "bufferViews_bufferView_buffer_Cube.009_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 128,
            "byteOffset": 0,
            "name": "bufferView_buffer_Cube.009_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.009_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 12,
            "byteOffset": 128,
            "name": "bufferView_buffer_Cube.009_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.010_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 5184,
            "byteOffset": 43772,
            "name": "bufferView_buffer_Cube.010_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.010_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 504,
            "byteOffset": 48956,
            "name": "bufferView_buffer_Cube.010_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.013_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 14016,
            "byteOffset": 27932,
            "name": "bufferView_buffer_Cube.013_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.013_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 1824,
            "byteOffset": 41948,
            "name": "bufferView_buffer_Cube.013_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.020_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 3984,
            "byteOffset": 140,
            "name": "bufferView_buffer_Cube.020_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.020_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 648,
            "byteOffset": 4124,
            "name": "bufferView_buffer_Cube.020_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.021_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 3984,
            "byteOffset": 4772,
            "name": "bufferView_buffer_Cube.021_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.021_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 648,
            "byteOffset": 8756,
            "name": "bufferView_buffer_Cube.021_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.022_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 3984,
            "byteOffset": 9404,
            "name": "bufferView_buffer_Cube.022_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.022_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 648,
            "byteOffset": 13388,
            "name": "bufferView_buffer_Cube.022_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.023_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 3984,
            "byteOffset": 14036,
            "name": "bufferView_buffer_Cube.023_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.023_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 648,
            "byteOffset": 18020,
            "name": "bufferView_buffer_Cube.023_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.024_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 3984,
            "byteOffset": 18668,
            "name": "bufferView_buffer_Cube.024_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.024_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 648,
            "byteOffset": 22652,
            "name": "bufferView_buffer_Cube.024_1",
            "target": 34963
        },
        "bufferViews_bufferView_buffer_Cube.025_0": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 3984,
            "byteOffset": 23300,
            "name": "bufferView_buffer_Cube.025_0",
            "target": 34962
        },
        "bufferViews_bufferView_buffer_Cube.025_1": {
            "buffer": "buffers_buffer_combined",
            "byteLength": 648,
            "byteOffset": 27284,
            "name": "bufferView_buffer_Cube.025_1",
            "target": 34963
        }
    },
    "buffers": {
        "buffers_buffer_combined": {
            "byteLength": 49460,
            "name": "buffer_combined",
            "type": "arraybuffer",
            "uri": "data:application/octet-stream;base64,"
        }
    },
    "glExtensionsUsed": [],
    "images": {
        "images_CarpetLane": {
            "name": "CarpetLane",
            "uri": "CarpetLane.png"
        },
        "images_ExteriorWalls": {
            "name": "ExteriorWalls",
            "uri": "ExteriorWalls.png"
        }
    },
    "materials": {
        "materials_Carpet": {
            "name": "Carpet",
            "technique": "techniques_Carpet",
            "values": {
                "samp0": "texture_CarpetLane"
            }
        },
        "materials_ExteriorWalls": {
            "name": "ExteriorWalls",
            "technique": "techniques_ExteriorWalls",
            "values": {}
        },
        "materials_Neon Off": {
            "name": "Neon Off",
            "technique": "techniques_Neon Off",
            "values": {}
        }
    },
    "meshes": {
        "meshes_Cube.009": {
            "name": "Cube.009",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.009_1",
                        "POSITION": "accessors_accessor_buffer_Cube.009_0",
                        "TEXCOORD_0": "accessors_accessor_buffer_Cube.009_2"
                    },
                    "indices": "accessors_accessor_buffer_Cube.009_3",
                    "material": "materials_Carpet",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.010": {
            "name": "Cube.010",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.010_1",
                        "POSITION": "accessors_accessor_buffer_Cube.010_0",
                        "TEXCOORD_0": "accessors_accessor_buffer_Cube.010_2"
                    },
                    "indices": "accessors_accessor_buffer_Cube.010_3",
                    "material": "materials_ExteriorWalls",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.013": {
            "name": "Cube.013",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.013_1",
                        "POSITION": "accessors_accessor_buffer_Cube.013_0"
                    },
                    "indices": "accessors_accessor_buffer_Cube.013_2",
                    "material": "materials_Neon Off",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.020": {
            "name": "Cube.020",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.020_1",
                        "POSITION": "accessors_accessor_buffer_Cube.020_0"
                    },
                    "indices": "accessors_accessor_buffer_Cube.020_2",
                    "material": "materials_Neon Off",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.021": {
            "name": "Cube.021",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.021_1",
                        "POSITION": "accessors_accessor_buffer_Cube.021_0"
                    },
                    "indices": "accessors_accessor_buffer_Cube.021_2",
                    "material": "materials_Neon Off",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.022": {
            "name": "Cube.022",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.022_1",
                        "POSITION": "accessors_accessor_buffer_Cube.022_0"
                    },
                    "indices": "accessors_accessor_buffer_Cube.022_2",
                    "material": "materials_Neon Off",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.023": {
            "name": "Cube.023",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.023_1",
                        "POSITION": "accessors_accessor_buffer_Cube.023_0"
                    },
                    "indices": "accessors_accessor_buffer_Cube.023_2",
                    "material": "materials_Neon Off",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.024": {
            "name": "Cube.024",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.024_1",
                        "POSITION": "accessors_accessor_buffer_Cube.024_0"
                    },
                    "indices": "accessors_accessor_buffer_Cube.024_2",
                    "material": "materials_Neon Off",
                    "mode": 4
                }
            ]
        },
        "meshes_Cube.025": {
            "name": "Cube.025",
            "primitives": [
                {
                    "attributes": {
                        "NORMAL": "accessors_accessor_buffer_Cube.025_1",
                        "POSITION": "accessors_accessor_buffer_Cube.025_0"
                    },
                    "indices": "accessors_accessor_buffer_Cube.025_2",
                    "material": "materials_Neon Off",
                    "mode": 4
                }
            ]
        }
    },
    "nodes": {
        "nodes_Arrow1": {
            "meshes": [
                "meshes_Cube.021"
            ],
            "name": "Arrow1",
            "rotation": [
                -0.3826834559440613,
                0.0,
                0.0,
                0.9238795638084412
            ],
            "scale": [
                1.0,
                0.9999999403953552,
                0.9999999403953552
            ],
            "translation": [
                1.805804967880249,
                33.7703971862793,
                1.2112724781036377
            ]
        },
        "nodes_Arrow2": {
            "meshes": [
                "meshes_Cube.020"
            ],
            "name": "Arrow2",
            "rotation": [
                -0.3826834559440613,
                0.0,
                0.0,
                0.9238795638084412
            ],
            "scale": [
                1.0,
                0.9999999403953552,
                0.9999999403953552
            ],
            "translation": [
                1.805804967880249,
                32.07040023803711,
                1.2112724781036377
            ]
        },
        "nodes_Arrow3": {
            "meshes": [
                "meshes_Cube.022"
            ],
            "name": "Arrow3",
            "rotation": [
                -0.3826834559440613,
                0.0,
                0.0,
                0.9238795638084412
            ],
            "scale": [
                1.0,
                0.9999999403953552,
                0.9999999403953552
            ],
            "translation": [
                1.805804967880249,
                30.370399475097656,
                1.2112724781036377
            ]
        },
        "nodes_Arrow4": {
            "meshes": [
                "meshes_Cube.024"
            ],
            "name": "Arrow4",
            "rotation": [
                -0.3826834559440613,
                0.0,
                0.0,
                0.9238795638084412
            ],
            "scale": [
                1.0,
                0.9999999403953552,
                0.9999999403953552
            ],
            "translation": [
                -1.805799961090088,
                33.7703971862793,
                1.2112724781036377
            ]
        },
        "nodes_Arrow5": {
            "meshes": [
                "meshes_Cube.025"
            ],
            "name": "Arrow5",
            "rotation": [
                -0.3826834559440613,
                0.0,
                0.0,
                0.9238795638084412
            ],
            "scale": [
                1.0,
                0.9999999403953552,
                0.9999999403953552
            ],
            "translation": [
                -1.805799961090088,
                32.07040023803711,
                1.2112724781036377
            ]
        },
        "nodes_Arrow6": {
            "meshes": [
                "meshes_Cube.023"
            ],
            "name": "Arrow6",
            "rotation": [
                -0.3826834559440613,
                0.0,
                0.0,
                0.9238795638084412
            ],
            "scale": [
                1.0,
                0.9999999403953552,
                0.9999999403953552
            ],
            "translation": [
                -1.805799961090088,
                30.370399475097656,
                1.2112724781036377
            ]
        },
        "nodes_BezierCurve.005": {
            "name": "BezierCurve.005",
            "rotation": [
                -0.5000000596046448,
                0.5,
                0.5,
                0.5000000596046448
            ],
            "scale": [
                0.635848343372345,
                0.635848343372345,
                0.635848343372345
            ],
            "translation": [
                6.375284194946289,
                37.46181106567383,
                2.709237813949585
            ]
        },
        "nodes_BowlingRoomWalls.002": {
            "meshes": [
                "meshes_Cube.010"
            ],
            "name": "BowlingRoomWalls.002",
            "rotation": [
                0.0,
                0.0,
                0.0,
                1.0
            ],
            "scale": [
                1.0707520246505737,
                22.518556594848633,
                5.354085922241211
            ],
            "translation": [
                0.0,
                0.0,
                -0.04999759793281555
            ]
        },
        "nodes_BowlingRoomWalls.003": {
            "meshes": [
                "meshes_Cube.009"
            ],
            "name": "BowlingRoomWalls.003",
            "rotation": [
                0.0,
                0.0,
                0.0,
                1.0
            ],
            "scale": [
                1.0707520246505737,
                22.5185546875,
                5.354085922241211
            ],
            "translation": [
                0.0,
                11.684396743774414,
                0.0
            ]
        },
        "nodes_Cube.004": {
            "meshes": [
                "meshes_Cube.013"
            ],
            "name": "Cube.004",
            "rotation": [
                0.0,
                0.0,
                0.0,
                1.0
            ],
            "scale": [
                0.02500000037252903,
                2.1766300201416016,
                0.02500000037252903
            ],
            "translation": [
                0.0,
                32.071800231933594,
                -0.04999759793281555
            ]
        },
        "nodes_Scene_root": {
            "children": [
                "nodes_BowlingRoomWalls.003",
                "nodes_BezierCurve.005",
                "nodes_Arrow5",
                "nodes_Arrow4",
                "nodes_Arrow6",
                "nodes_Arrow3",
                "nodes_Arrow1",
                "nodes_Arrow2",
                "nodes_Cube.004",
                "nodes_BowlingRoomWalls.002"
            ],
            "matrix": [
                1.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                -1.0,
                0.0,
                0.0,
                1.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                1.0
            ],
            "name": "Scene_root"
        }
    },
    "programs": {
        "programs_Carpet": {
            "attributes": [
                "att0",
                "att1",
                "bl_Vertex",
                "bl_Normal"
            ],
            "fragmentShader": "shaders_CarpetFS",
            "name": "Carpet",
            "vertexShader": "shaders_CarpetVS"
        },
        "programs_ExteriorWalls": {
            "attributes": [
                "bl_Vertex",
                "bl_Normal"
            ],
            "fragmentShader": "shaders_ExteriorWallsFS",
            "name": "ExteriorWalls",
            "vertexShader": "shaders_ExteriorWallsVS"
        },
        "programs_Neon Off": {
            "attributes": [
                "bl_Vertex",
                "bl_Normal"
            ],
            "fragmentShader": "shaders_Neon OffFS",
            "name": "Neon Off",
            "vertexShader": "shaders_Neon OffVS"
        }
    },
    "samplers": {
        "samplers_default": {
            "name": "default"
        }
    },
    "scene": "scenes_Scene",
    "scenes": {
        "scenes_Scene": {
            "extras": {
                "active_camera": null,
                "background_color": [
                    0.061246056109666824,
                    0.061246056109666824,
                    0.061246056109666824
                ],
                "frames_per_second": 24
            },
            "name": "Scene",
            "nodes": [
                "nodes___scene_root_0_"
            ]
        }
    },
    "shaders": {
        "shaders_CarpetFS": {
            "name": "CarpetFS",
            "type": 35632,
            "uri": "data:text/plain;base64,"
        },
        "shaders_CarpetVS": {
            "name": "CarpetVS",
            "type": 35633,
            "uri": "data:text/plain;base64,I3ZlcnNpb24gMTAwCgpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwoKYXR0cmlidXRlIHZlYzQgYmxfVmVydGV4OwphdHRyaWJ1dGUgdmVjMyBibF9Ob3JtYWw7CnVuaWZvcm0gbWF0NCBibF9Nb2RlbFZpZXdNYXRyaXg7CnVuaWZvcm0gbWF0NCBibF9Qcm9qZWN0aW9uTWF0cml4Owp1bmlmb3JtIG1hdDMgYmxfTm9ybWFsTWF0cml4OwphdHRyaWJ1dGUgdmVjMyBhdHQwOwp1bmlmb3JtIGludCBhdHQwX2luZm87CnZhcnlpbmcgdmVjMyB2YXIwOwoKYXR0cmlidXRlIHZlYzMgYXR0MTsKdW5pZm9ybSBpbnQgYXR0MV9pbmZvOwp2YXJ5aW5nIHZlYzMgdmFyMTsKCgoNCg0KdmFyeWluZyB2ZWMzIHZhcnBvc2l0aW9uOw0KdmFyeWluZyB2ZWMzIHZhcm5vcm1hbDsNCg0KDQoNCg0KLyogQ29sb3IsIGtlZXAgYXR0cmlidXRlIHN5bmMgd2l0aDogZ3B1X3NoYWRlcl92ZXJ0ZXhfd29ybGQuZ2xzbCAqLw0KDQpmbG9hdCBzcmdiX3RvX2xpbmVhcnJnYihmbG9hdCBjKQ0Kew0KCWlmIChjIDwgMC4wNDA0NSkNCgkJcmV0dXJuIChjIDwgMC4wKSA/IDAuMCA6IGMgKiAoMS4wIC8gMTIuOTIpOw0KCWVsc2UNCgkJcmV0dXJuIHBvdygoYyArIDAuMDU1KSAqICgxLjAgLyAxLjA1NSksIDIuNCk7DQp9DQoNCnZvaWQgc3JnYl90b19saW5lYXJyZ2IodmVjMyBjb2xfZnJvbSwgdmFyeWluZyB2ZWMzIGNvbF90bykNCnsNCgljb2xfdG8uciA9IHNyZ2JfdG9fbGluZWFycmdiKGNvbF9mcm9tLnIpOw0KCWNvbF90by5nID0gc3JnYl90b19saW5lYXJyZ2IoY29sX2Zyb20uZyk7DQoJY29sX3RvLmIgPSBzcmdiX3RvX2xpbmVhcnJnYihjb2xfZnJvbS5iKTsNCn0NCg0Kdm9pZCBzcmdiX3RvX2xpbmVhcnJnYih2ZWM0IGNvbF9mcm9tLCB2YXJ5aW5nIHZlYzQgY29sX3RvKQ0Kew0KCWNvbF90by5yID0gc3JnYl90b19saW5lYXJyZ2IoY29sX2Zyb20ucik7DQoJY29sX3RvLmcgPSBzcmdiX3RvX2xpbmVhcnJnYihjb2xfZnJvbS5nKTsNCgljb2xfdG8uYiA9IHNyZ2JfdG9fbGluZWFycmdiKGNvbF9mcm9tLmIpOw0KCWNvbF90by5hID0gY29sX2Zyb20uYTsNCn0NCg0KYm9vbCBpc19zcmdiKGludCBpbmZvKQ0Kew0KI2lmZGVmIFVTRV9ORVdfU0hBRElORw0KCXJldHVybiAoaW5mbyA9PSAxKT8gdHJ1ZTogZmFsc2U7DQojZWxzZQ0KCXJldHVybiBmYWxzZTsNCiNlbmRpZg0KfQ0KDQp2b2lkIHNldF92YXJfZnJvbV9hdHRyKGZsb2F0IGF0dHIsIGludCBpbmZvLCB2YXJ5aW5nIGZsb2F0IHZhcikNCnsNCgl2YXIgPSBhdHRyOw0KfQ0KDQp2b2lkIHNldF92YXJfZnJvbV9hdHRyKHZlYzIgYXR0ciwgaW50IGluZm8sIHZhcnlpbmcgdmVjMiB2YXIpDQp7DQoJdmFyID0gYXR0cjsNCn0NCg0Kdm9pZCBzZXRfdmFyX2Zyb21fYXR0cih2ZWMzIGF0dHIsIGludCBpbmZvLCB2YXJ5aW5nIHZlYzMgdmFyKQ0Kew0KCWlmIChpc19zcmdiKGluZm8pKSB7DQoJCXNyZ2JfdG9fbGluZWFycmdiKGF0dHIsIHZhcik7DQoJfQ0KCWVsc2Ugew0KCQl2YXIgPSBhdHRyOw0KCX0NCn0NCg0Kdm9pZCBzZXRfdmFyX2Zyb21fYXR0cih2ZWM0IGF0dHIsIGludCBpbmZvLCB2YXJ5aW5nIHZlYzQgdmFyKQ0Kew0KCWlmIChpc19zcmdiKGluZm8pKSB7DQoJCXNyZ2JfdG9fbGluZWFycmdiKGF0dHIsIHZhcik7DQoJfQ0KCWVsc2Ugew0KCQl2YXIgPSBhdHRyOw0KCX0NCn0NCg0KLyogZW5kIGNvbG9yIGNvZGUgKi8NCg0KDQp2b2lkIG1haW4oKQ0Kew0KDQoJdmVjNCBwb3NpdGlvbiA9IGJsX1ZlcnRleDsNCgl2ZWMzIG5vcm1hbCA9IGJsX05vcm1hbDsNCg0KDQoJdmVjNCBjbyA9IGJsX01vZGVsVmlld01hdHJpeCAqIHBvc2l0aW9uOw0KDQoJdmFycG9zaXRpb24gPSBjby54eXo7DQoJdmFybm9ybWFsID0gbm9ybWFsaXplKGJsX05vcm1hbE1hdHJpeCAqIG5vcm1hbCk7DQoJZ2xfUG9zaXRpb24gPSBibF9Qcm9qZWN0aW9uTWF0cml4ICogY287DQoNCiANCg0KDQoJc2V0X3Zhcl9mcm9tX2F0dHIoYXR0MCwgYXR0MF9pbmZvLCB2YXIwKTsKCglzZXRfdmFyX2Zyb21fYXR0cihhdHQxLCBhdHQxX2luZm8sIHZhcjEpOwoKfQo="
        },
        "shaders_ExteriorWallsFS": {
            "name": "ExteriorWallsFS",
            "type": 35632,
            "uri": "data:text/plain;base64,"
        },
        "shaders_ExteriorWallsVS": {
            "name": "ExteriorWallsVS",
            "type": 35633,
            "uri": "data:text/plain;base64,I3ZlcnNpb24gMTAwCgpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwoKYXR0cmlidXRlIHZlYzQgYmxfVmVydGV4OwphdHRyaWJ1dGUgdmVjMyBibF9Ob3JtYWw7CnVuaWZvcm0gbWF0NCBibF9Nb2RlbFZpZXdNYXRyaXg7CnVuaWZvcm0gbWF0NCBibF9Qcm9qZWN0aW9uTWF0cml4Owp1bmlmb3JtIG1hdDMgYmxfTm9ybWFsTWF0cml4OwoKDQoNCnZhcnlpbmcgdmVjMyB2YXJwb3NpdGlvbjsNCnZhcnlpbmcgdmVjMyB2YXJub3JtYWw7DQoNCg0KDQoNCi8qIENvbG9yLCBrZWVwIGF0dHJpYnV0ZSBzeW5jIHdpdGg6IGdwdV9zaGFkZXJfdmVydGV4X3dvcmxkLmdsc2wgKi8NCg0KZmxvYXQgc3JnYl90b19saW5lYXJyZ2IoZmxvYXQgYykNCnsNCglpZiAoYyA8IDAuMDQwNDUpDQoJCXJldHVybiAoYyA8IDAuMCkgPyAwLjAgOiBjICogKDEuMCAvIDEyLjkyKTsNCgllbHNlDQoJCXJldHVybiBwb3coKGMgKyAwLjA1NSkgKiAoMS4wIC8gMS4wNTUpLCAyLjQpOw0KfQ0KDQp2b2lkIHNyZ2JfdG9fbGluZWFycmdiKHZlYzMgY29sX2Zyb20sIHZhcnlpbmcgdmVjMyBjb2xfdG8pDQp7DQoJY29sX3RvLnIgPSBzcmdiX3RvX2xpbmVhcnJnYihjb2xfZnJvbS5yKTsNCgljb2xfdG8uZyA9IHNyZ2JfdG9fbGluZWFycmdiKGNvbF9mcm9tLmcpOw0KCWNvbF90by5iID0gc3JnYl90b19saW5lYXJyZ2IoY29sX2Zyb20uYik7DQp9DQoNCnZvaWQgc3JnYl90b19saW5lYXJyZ2IodmVjNCBjb2xfZnJvbSwgdmFyeWluZyB2ZWM0IGNvbF90bykNCnsNCgljb2xfdG8uciA9IHNyZ2JfdG9fbGluZWFycmdiKGNvbF9mcm9tLnIpOw0KCWNvbF90by5nID0gc3JnYl90b19saW5lYXJyZ2IoY29sX2Zyb20uZyk7DQoJY29sX3RvLmIgPSBzcmdiX3RvX2xpbmVhcnJnYihjb2xfZnJvbS5iKTsNCgljb2xfdG8uYSA9IGNvbF9mcm9tLmE7DQp9DQoNCmJvb2wgaXNfc3JnYihpbnQgaW5mbykNCnsNCiNpZmRlZiBVU0VfTkVXX1NIQURJTkcNCglyZXR1cm4gKGluZm8gPT0gMSk/IHRydWU6IGZhbHNlOw0KI2Vsc2UNCglyZXR1cm4gZmFsc2U7DQojZW5kaWYNCn0NCg0Kdm9pZCBzZXRfdmFyX2Zyb21fYXR0cihmbG9hdCBhdHRyLCBpbnQgaW5mbywgdmFyeWluZyBmbG9hdCB2YXIpDQp7DQoJdmFyID0gYXR0cjsNCn0NCg0Kdm9pZCBzZXRfdmFyX2Zyb21fYXR0cih2ZWMyIGF0dHIsIGludCBpbmZvLCB2YXJ5aW5nIHZlYzIgdmFyKQ0Kew0KCXZhciA9IGF0dHI7DQp9DQoNCnZvaWQgc2V0X3Zhcl9mcm9tX2F0dHIodmVjMyBhdHRyLCBpbnQgaW5mbywgdmFyeWluZyB2ZWMzIHZhcikNCnsNCglpZiAoaXNfc3JnYihpbmZvKSkgew0KCQlzcmdiX3RvX2xpbmVhcnJnYihhdHRyLCB2YXIpOw0KCX0NCgllbHNlIHsNCgkJdmFyID0gYXR0cjsNCgl9DQp9DQoNCnZvaWQgc2V0X3Zhcl9mcm9tX2F0dHIodmVjNCBhdHRyLCBpbnQgaW5mbywgdmFyeWluZyB2ZWM0IHZhcikNCnsNCglpZiAoaXNfc3JnYihpbmZvKSkgew0KCQlzcmdiX3RvX2xpbmVhcnJnYihhdHRyLCB2YXIpOw0KCX0NCgllbHNlIHsNCgkJdmFyID0gYXR0cjsNCgl9DQp9DQoNCi8qIGVuZCBjb2xvciBjb2RlICovDQoNCg0Kdm9pZCBtYWluKCkNCnsNCg0KCXZlYzQgcG9zaXRpb24gPSBibF9WZXJ0ZXg7DQoJdmVjMyBub3JtYWwgPSBibF9Ob3JtYWw7DQoNCg0KCXZlYzQgY28gPSBibF9Nb2RlbFZpZXdNYXRyaXggKiBwb3NpdGlvbjsNCg0KCXZhcnBvc2l0aW9uID0gY28ueHl6Ow0KCXZhcm5vcm1hbCA9IG5vcm1hbGl6ZShibF9Ob3JtYWxNYXRyaXggKiBub3JtYWwpOw0KCWdsX1Bvc2l0aW9uID0gYmxfUHJvamVjdGlvbk1hdHJpeCAqIGNvOw0KDQogDQoNCg0KfQo="
        },
        "shaders_Neon OffFS": {
            "name": "Neon OffFS",
            "type": 35632,
            "uri": "data:text/plain;base64,"
        },
        "shaders_Neon OffVS": {
            "name": "Neon OffVS",
            "type": 35633,
            "uri": "data:text/plain;base64,I3ZlcnNpb24gMTAwCgpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwoKYXR0cmlidXRlIHZlYzQgYmxfVmVydGV4OwphdHRyaWJ1dGUgdmVjMyBibF9Ob3JtYWw7CnVuaWZvcm0gbWF0NCBibF9Nb2RlbFZpZXdNYXRyaXg7CnVuaWZvcm0gbWF0NCBibF9Qcm9qZWN0aW9uTWF0cml4Owp1bmlmb3JtIG1hdDMgYmxfTm9ybWFsTWF0cml4OwoKDQoNCnZhcnlpbmcgdmVjMyB2YXJwb3NpdGlvbjsNCnZhcnlpbmcgdmVjMyB2YXJub3JtYWw7DQoNCg0KDQoNCi8qIENvbG9yLCBrZWVwIGF0dHJpYnV0ZSBzeW5jIHdpdGg6IGdwdV9zaGFkZXJfdmVydGV4X3dvcmxkLmdsc2wgKi8NCg0KZmxvYXQgc3JnYl90b19saW5lYXJyZ2IoZmxvYXQgYykNCnsNCglpZiAoYyA8IDAuMDQwNDUpDQoJCXJldHVybiAoYyA8IDAuMCkgPyAwLjAgOiBjICogKDEuMCAvIDEyLjkyKTsNCgllbHNlDQoJCXJldHVybiBwb3coKGMgKyAwLjA1NSkgKiAoMS4wIC8gMS4wNTUpLCAyLjQpOw0KfQ0KDQp2b2lkIHNyZ2JfdG9fbGluZWFycmdiKHZlYzMgY29sX2Zyb20sIHZhcnlpbmcgdmVjMyBjb2xfdG8pDQp7DQoJY29sX3RvLnIgPSBzcmdiX3RvX2xpbmVhcnJnYihjb2xfZnJvbS5yKTsNCgljb2xfdG8uZyA9IHNyZ2JfdG9fbGluZWFycmdiKGNvbF9mcm9tLmcpOw0KCWNvbF90by5iID0gc3JnYl90b19saW5lYXJyZ2IoY29sX2Zyb20uYik7DQp9DQoNCnZvaWQgc3JnYl90b19saW5lYXJyZ2IodmVjNCBjb2xfZnJvbSwgdmFyeWluZyB2ZWM0IGNvbF90bykNCnsNCgljb2xfdG8uciA9IHNyZ2JfdG9fbGluZWFycmdiKGNvbF9mcm9tLnIpOw0KCWNvbF90by5nID0gc3JnYl90b19saW5lYXJyZ2IoY29sX2Zyb20uZyk7DQoJY29sX3RvLmIgPSBzcmdiX3RvX2xpbmVhcnJnYihjb2xfZnJvbS5iKTsNCgljb2xfdG8uYSA9IGNvbF9mcm9tLmE7DQp9DQoNCmJvb2wgaXNfc3JnYihpbnQgaW5mbykNCnsNCiNpZmRlZiBVU0VfTkVXX1NIQURJTkcNCglyZXR1cm4gKGluZm8gPT0gMSk/IHRydWU6IGZhbHNlOw0KI2Vsc2UNCglyZXR1cm4gZmFsc2U7DQojZW5kaWYNCn0NCg0Kdm9pZCBzZXRfdmFyX2Zyb21fYXR0cihmbG9hdCBhdHRyLCBpbnQgaW5mbywgdmFyeWluZyBmbG9hdCB2YXIpDQp7DQoJdmFyID0gYXR0cjsNCn0NCg0Kdm9pZCBzZXRfdmFyX2Zyb21fYXR0cih2ZWMyIGF0dHIsIGludCBpbmZvLCB2YXJ5aW5nIHZlYzIgdmFyKQ0Kew0KCXZhciA9IGF0dHI7DQp9DQoNCnZvaWQgc2V0X3Zhcl9mcm9tX2F0dHIodmVjMyBhdHRyLCBpbnQgaW5mbywgdmFyeWluZyB2ZWMzIHZhcikNCnsNCglpZiAoaXNfc3JnYihpbmZvKSkgew0KCQlzcmdiX3RvX2xpbmVhcnJnYihhdHRyLCB2YXIpOw0KCX0NCgllbHNlIHsNCgkJdmFyID0gYXR0cjsNCgl9DQp9DQoNCnZvaWQgc2V0X3Zhcl9mcm9tX2F0dHIodmVjNCBhdHRyLCBpbnQgaW5mbywgdmFyeWluZyB2ZWM0IHZhcikNCnsNCglpZiAoaXNfc3JnYihpbmZvKSkgew0KCQlzcmdiX3RvX2xpbmVhcnJnYihhdHRyLCB2YXIpOw0KCX0NCgllbHNlIHsNCgkJdmFyID0gYXR0cjsNCgl9DQp9DQoNCi8qIGVuZCBjb2xvciBjb2RlICovDQoNCg0Kdm9pZCBtYWluKCkNCnsNCg0KCXZlYzQgcG9zaXRpb24gPSBibF9WZXJ0ZXg7DQoJdmVjMyBub3JtYWwgPSBibF9Ob3JtYWw7DQoNCg0KCXZlYzQgY28gPSBibF9Nb2RlbFZpZXdNYXRyaXggKiBwb3NpdGlvbjsNCg0KCXZhcnBvc2l0aW9uID0gY28ueHl6Ow0KCXZhcm5vcm1hbCA9IG5vcm1hbGl6ZShibF9Ob3JtYWxNYXRyaXggKiBub3JtYWwpOw0KCWdsX1Bvc2l0aW9uID0gYmxfUHJvamVjdGlvbk1hdHJpeCAqIGNvOw0KDQogDQoNCg0KfQo="
        }
    },
    "techniques": {
        "techniques_Carpet": {
            "attributes": {
                "att0": "att0",
                "att1": "att1",
                "bl_Normal": "bl_Normal",
                "bl_Vertex": "bl_Vertex"
            },
            "name": "Carpet",
            "parameters": {
                "att0": {
                    "semantic": "POSITION",
                    "type": 35665
                },
                "att1": {
                    "semantic": "TEXCOORD_0",
                    "type": 35664
                },
                "bl_ModelViewMatrix": {
                    "semantic": "MODELVIEW",
                    "type": 35676
                },
                "bl_Normal": {
                    "semantic": "NORMAL",
                    "type": 35665
                },
                "bl_NormalMatrix": {
                    "semantic": "MODELVIEWINVERSETRANSPOSE",
                    "type": 35675
                },
                "bl_ProjectionMatrix": {
                    "semantic": "PROJECTION",
                    "type": 35676
                },
                "bl_Vertex": {
                    "semantic": "POSITION",
                    "type": 35666
                },
                "samp0": {
                    "type": 35678,
                    "value": "texture_CarpetLane"
                },
                "view_mat": {
                    "type": 35676,
                    "value": null
                }
            },
            "program": "programs_Carpet",
            "uniforms": {
                "bl_ModelViewMatrix": "bl_ModelViewMatrix",
                "bl_NormalMatrix": "bl_NormalMatrix",
                "bl_ProjectionMatrix": "bl_ProjectionMatrix",
                "samp0": "samp0",
                "unfviewmat": "view_mat"
            }
        },
        "techniques_ExteriorWalls": {
            "attributes": {
                "bl_Normal": "bl_Normal",
                "bl_Vertex": "bl_Vertex"
            },
            "name": "ExteriorWalls",
            "parameters": {
                "bl_ModelViewMatrix": {
                    "semantic": "MODELVIEW",
                    "type": 35676
                },
                "bl_Normal": {
                    "semantic": "NORMAL",
                    "type": 35665
                },
                "bl_NormalMatrix": {
                    "semantic": "MODELVIEWINVERSETRANSPOSE",
                    "type": 35675
                },
                "bl_ProjectionMatrix": {
                    "semantic": "PROJECTION",
                    "type": 35676
                },
                "bl_Vertex": {
                    "semantic": "POSITION",
                    "type": 35666
                }
            },
            "program": "programs_ExteriorWalls",
            "uniforms": {
                "bl_ModelViewMatrix": "bl_ModelViewMatrix",
                "bl_NormalMatrix": "bl_NormalMatrix",
                "bl_ProjectionMatrix": "bl_ProjectionMatrix"
            }
        },
        "techniques_Neon Off": {
            "attributes": {
                "bl_Normal": "bl_Normal",
                "bl_Vertex": "bl_Vertex"
            },
            "name": "Neon Off",
            "parameters": {
                "bl_ModelViewMatrix": {
                    "semantic": "MODELVIEW",
                    "type": 35676
                },
                "bl_Normal": {
                    "semantic": "NORMAL",
                    "type": 35665
                },
                "bl_NormalMatrix": {
                    "semantic": "MODELVIEWINVERSETRANSPOSE",
                    "type": 35675
                },
                "bl_ProjectionMatrix": {
                    "semantic": "PROJECTION",
                    "type": 35676
                },
                "bl_Vertex": {
                    "semantic": "POSITION",
                    "type": 35666
                }
            },
            "program": "programs_Neon Off",
            "uniforms": {
                "bl_ModelViewMatrix": "bl_ModelViewMatrix",
                "bl_NormalMatrix": "bl_NormalMatrix",
                "bl_ProjectionMatrix": "bl_ProjectionMatrix"
            }
        }
    },
    "textures": {
        "textures_CarpetLane": {
            "format": 6408,
            "internalFormat": 6408,
            "name": "CarpetLane",
            "sampler": "samplers_default",
            "source": "images_CarpetLane"
        },
        "textures_ExteriorWalls": {
            "format": 6408,
            "internalFormat": 6408,
            "name": "ExteriorWalls",
            "sampler": "samplers_default",
            "source": "images_ExteriorWalls"
        }
    }
}
